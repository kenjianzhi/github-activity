name: GitHub activity data as a measure of developer activity

on:
  workflow_dispatch:
  schedule:
  - cron: '0 * * * *'

jobs:
  stale:

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Random Delay
        run: |
          # 隨機延遲 0 到 60 秒
          DELAY=$((RANDOM % 60))
          echo "Waiting $DELAY seconds..."
          sleep $DELAY

      - name: Generate Random Commit Message
        id: random-message
        run: |
          TYPES=("feat" "fix" "docs" "style" "refactor" "test" "chore")
          SCOPES=("資料庫" "控制層" "模板層" "介面" "後端邏輯" "前端元件")
          ACTIONS=("新增功能" "修正錯誤" "更新文件" "格式調整" "代碼重構" "增加測試" "工具更新")
          ISSUES=("issue #$((RANDOM % 10000))" "issue #$((RANDOM % 10000))" "issue #$((RANDOM % 10000))")

          RANDOM_TYPE=${TYPES[$RANDOM % ${#TYPES[@]}]}
          RANDOM_SCOPE=${SCOPES[$RANDOM % ${#SCOPES[@]}]}
          RANDOM_ACTION=${ACTIONS[$RANDOM % ${#ACTIONS[@]}]}
          RANDOM_ISSUE=${ISSUES[$RANDOM % ${#ISSUES[@]}]}

          TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
          echo "RANDOM_MESSAGE=$RANDOM_TYPE($RANDOM_SCOPE): $RANDOM_ACTION - $TIMESTAMP\n\n調整項目：\n1. 詳細描述調整內容。\n2. 說明原因與效果。\n\n$RANDOM_ISSUE" >> $GITHUB_ENV
         
      - name: Generate Random Commit Message 2
        id: random-message2
        run: |
          TYPES=("feat" "fix" "docs" "style" "refactor" "test" "chore")
          SCOPES=("資料庫" "控制層" "模板層" "介面" "後端邏輯" "前端元件")
          ACTIONS=("新增功能" "修正錯誤" "更新文件" "格式調整" "代碼重構" "增加測試" "工具更新")
          ISSUES=("issue #$((RANDOM % 10000))" "issue #$((RANDOM % 10000))" "issue #$((RANDOM % 10000))")

          RANDOM_TYPE=${TYPES[$RANDOM % ${#TYPES[@]}]}
          RANDOM_SCOPE=${SCOPES[$RANDOM % ${#SCOPES[@]}]}
          RANDOM_ACTION=${ACTIONS[$RANDOM % ${#ACTIONS[@]}]}
          RANDOM_ISSUE=${ISSUES[$RANDOM % ${#ISSUES[@]}]}

          TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
          echo "RANDOM_MESSAGE2=$RANDOM_TYPE($RANDOM_SCOPE): $RANDOM_ACTION - $TIMESTAMP\n\n調整項目：\n1. 詳細描述調整內容。\n2. 說明原因與效果。\n\n$RANDOM_ISSUE" >> $GITHUB_ENV

      - name: GitHub activity
        run: |
          git config --local user.email "${{ secrets.USER_EMAIL }}"
          git config --local user.name "${{ secrets.USER_NAME }}"
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git pull --rebase

          for i in {1..5}
          do
            # 生成隨機消息
            TYPES=("feat" "fix" "docs" "style" "refactor" "test" "chore")
            SCOPES=("資料庫" "控制層" "模板層" "介面" "後端邏輯" "前端元件")
            ACTIONS=("新增功能" "修正錯誤" "更新文件" "格式調整" "代碼重構" "增加測試" "工具更新")
            ISSUES=("issue #$((RANDOM % 10000))")

            RANDOM_TYPE=${TYPES[$RANDOM % ${#TYPES[@]}]}
            RANDOM_SCOPE=${SCOPES[$RANDOM % ${#SCOPES[@]}]}
            RANDOM_ACTION=${ACTIONS[$RANDOM % ${#ACTIONS[@]}]}
            RANDOM_ISSUE=${ISSUES[$RANDOM % ${#ISSUES[@]}]}
            RANDOM_MESSAGE="$RANDOM_TYPE($RANDOM_SCOPE): $RANDOM_ACTION - $(date +"%Y-%m-%d %H:%M:%S")\n\n調整項目：\n1. 詳細描述調整內容。\n2. 說明原因與效果。\n\n$RANDOM_ISSUE"

            # 提交和推送
            git commit --allow-empty -m "$RANDOM_MESSAGE"
            git push

            # 隨機睡眠 30 到 60 秒
            DELAY=$((RANDOM % 31 + 30))
            echo "Sleeping for $DELAY seconds..."
            sleep $DELAY
          done
      - name: Release
        if: ${{ github.event.inputs.release != 'none' }}
        uses: ncipollo/release-action@v1.13.0
        with:
          artifacts: "**/*.txt"
          prerelease: ${{ github.event.inputs.release == 'pre-release' }}
          makeLatest: ${{ github.event.inputs.release == 'release' }}
          allowUpdates: "true"
          tag: version.txt
